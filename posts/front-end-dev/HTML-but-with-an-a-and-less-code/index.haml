!!! 5

%html{:lang => "en"}

	%head
		%meta(http-equiv='X-UA-Compatible" content="IE=edge,chrome=1')
		%meta(charset='utf-8')
		%meta(name='viewport' content='width=device-width,initial-scale=1')
		%title "HTML, but with an A and less code"
		%script{:src => "http://use.typekit.com/cxh3ytl.js", :type => "text/javascript"}
		<script type="text/javascript">try{Typekit.load();}catch(e){}</script>
		%link(href="/stylesheets/screen.css" rel="stylesheet")
	%body

		%header

			<a href="/" class="logo">
				
			<img src="/images/dan-denney-character.png" alt="Dan Denney character" />

			<h3>Dan Denney<span> Super Social Front-End Dev</span></h3>

			</a>

			%nav
				%ul
					%li.nav-item
						<a href="/posts" data-icon="&#x0026;" aria-hidden="true"><span>Posts</span></a>
		
		%article.post-standard

			%p
				%strong This is just me sharing as I learn something, definitely not a tutorial.
		
			%h2 HTML, but with an A and less code
			%p 
				What do you do when you're joining a team that actually has "Mr. Haml" on it? Well, you spend some time learning Haml. (To be clear, <a href="http://twitter.com/nickawalsh">Nick Walsh</a> didn't create Haml, he just has been dubbed that by the front-end team at <a href="http://envylabs.com">Envy Labs</a> because he <a href="http://www.netmagazine.com/tutorials/craft-cleaner-more-concise-html-haml">wrote about it for .Net</a> and <a href="http://futureofwebdesign.com/new-york-2011/speakers/">spoke on it at FOWD NYC 2011</a>. In Nick's words, Haml is a way to craft cleaner, more concise HTML.

			%h2 Haml and Me
			%p 
				Originally created by <a href="http://hamptoncatlin.com">Hampton Catlin</a>, Haml is an HTML preprocessor that is primarily used in Rails apps. Normally, you would just use a .haml extension on a file in a Rails app and it just works. However, if you want to play with it elsewhere you can have it work immediately with <a href="http://incident57.com/codekit/">Codekit</a>.

			%p 
				Not to toot my own horn too much, but I am really pleased that I have just redone my site without a CMS. The main reason being that this post is actually being written in Haml in order to learn it. Because I didn't bind myself to templates, I can craft up this entire page in Haml and not have to worry about the rest of the site. (I'm not sure about how I will keep the nav updated dynamically but I'll broach that as we go.)

			%h2 Building this post
			%p 
				So, first things first I need a document structure. Now I could read a bit about how to set one up in the docs but I thought I'd just follow what Nick and Drew put together for <a href="https://github.com/mvcss/MVCSS">MVCSS</a>. That was super easy to follow to get the basic page structure rolling. Then, I tried sharing the code in here and that gets a little <a href="http://www.urbandictionary.com/define.php?term=cray+cray">cray, cray</a>. Luckily, I found <a href="http://stackoverflow.com/questions/1993993/haml-with-pre-how-to-remove-unwanted-intend#_=_">this</a> on the wonderful Stack Overflow.

			%p 
				So this below is what it takes to build up a basic page ready for content, pulling in my sitewide CSS and <a href="http://typekit.com">Typekit</a>.
				
			%pre
				%code
					= preserve do
						:escaped
							!!! 5
							%html{:lang => "en"}
								%head
									%meta(http-equiv='X-UA-Compatible" content="IE=edge,chrome=1')
									%meta(charset='utf-8')
									%meta(name='viewport' content='width=device-width,initial-scale=1')
									%title "HTML, but with an A and less code"
									%link(href="/stylesheets/screen.css" rel="stylesheet")
								%body

			%p 
				On save, Codekit does it's magic compiling and this is what gets created:

			%pre
				%code
					= preserve do
						:escaped
							<!DOCTYPE html>
							<html lang='en'>
							  <head>
							    <meta http-equiv='X-UA-Compatible" content="IE=edge,chrome=1'>
							    <meta charset='utf-8'>
							    <meta name="viewport" content="width=device-width,initial-scale=1">
							    <title>"HTML, but with an A and less code"</title>
							    <link href='/stylesheets/screen.css' rel='stylesheet'>
							  </head>
							  <body></body>
							</html>

			%p 
				It took a little bit to get there and to figure out the rules on indenting, but it is mighty clean code and I get the feeling that the &lt; and &gt; keys are going to be getting a little bit of a break as I work more in Haml.

			%h2 The Content
			%p
				As I was looking for solutions, I found this article about why you <a href="http://chriseppstein.github.com/blog/2010/02/08/haml-sucks-for-content/">shouldn't be using Haml for content</a>. While I'm doing the exact opposite as I learn the ins-and-outs of it, there are some cool things about Haml in that article. Basically, you can decide how you want to write your content. Use haml for your structure and pop in raw HTML as needed, use markdown, textile, etc. That is pretty cool.

			%p
				So far, this part has been easy but links are a little tricky. Getting in some of the special HTML5 items like icons called by data values with entities and aria-hidden are giving me some challenges. I'll follow up with the rest of the page shortly because I don't want to share where I have regular HTML mixed in. 

			%small
				June 24, 2012

		%footer
			%nav
				%ul
					%li.nav-item
						<a href="/posts" data-icon="&#x0026;" aria-hidden="true"><span>Posts</span></a></li>
			%small
				&copy; Dan Denney - I'm on the Twitters as <a href="http://twitter.com/dandenney">@dandenney</a>
