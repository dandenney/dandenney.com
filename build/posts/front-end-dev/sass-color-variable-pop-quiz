<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='utf-8'>
<meta content='IE=edge,chrome=1' http-equiv='X-UA-Compatible'>
<meta content='width=device-width, initial-scale=1.0' name='viewport'>
<!-- Use title if it's in the page YAML frontmatter -->
<title>Sass Color Variable Pop Quiz</title>
<!-- Typekit -->
<script src="//use.typekit.net/ddg5xff.js"></script>
<script>try{Typekit.load();}catch(e){}</script>
<link href="../../assets/stylesheets/application.css" rel="stylesheet" />
<link href="../../assets/stylesheets/vendor/prism.css" rel="stylesheet" />
</head>
<body class='posts posts_front-end-dev posts_front-end-dev_sass-color-variable-pop-quiz'>
<header>
<p class='dib'>
Dan Denney
</p>
<nav class='dib'>
<a class="mls" href="/posts">Posts</a>
<a class="mls" href="/blips">Blips</a>
<a class="mls" href="/tinkerings">Tinkerings</a>
<a class="mls" href="/">Home</a>
</nav>
</header>

<section class='row'>
<div class='cell cell--s'>
<article class='well'>
<h1>Sass Color Variable Pop Quiz</h1>
<h2>I had a question about color variables</h2>
<p>
Each project has some really easy to define colors that can get you started. Base font color, a highlight color, link color, etc. Once you're a few hundred lines in though, you start coming across more colors that are used for shading, borders, highlights, etc.
</p>
<p>
I knew
<a href='http://twitter.com/nickawalsh'>Nick</a>
and
<a href='http://twitter.com/drewbarontini'>Drew</a>
would have answers, so I popped some questions into the Envy Design Campfire.
</p>
<h3>
How many times do you have to use a color before it should be a variable and how do you conjure up names beyond the first 6 or 7?
</h3>
<p>
Nick chimed in with "if I use it more than three-ish times, it's usually time to variableize it or if it's a completely different color that doesn't fall into a sass-adjustment case (e.g blue theme, random green button appears)". Drew followed up with a gist of examples that was something like this:
</p>
<pre><code class='language-css'>Variables
Brand Colors
$color-brand-a: #606E67
$color-brand-b: #C98344
Base Colors
$color-base: #636365
$color-body: #EFEDDF
$color-border: #A9A9A9
$color-header: #3F4944
$color-input: #DCD7CE
Button Colors
$color-btn-a: #228B9B
$color-btn-b: #783737
$color-btn-c: #BFBEB2
Utility Colors
$color-error: $color-btn-b
$color-success: $color-header
Container Colors
$color-block-a: $color-header
$color-block-b: desaturate(darken($color-body, 4%), 11%)
$color-block-c: #D4D5C2
$color-card-a: lighten($color-body, 4%)
$color-card-b: $color-block-b</code></pre>
<h3>To the Twitters!</h3>
<p>
I thought that this might be something cool that other people would have an opinion on. So I tweeted the questions and I'm sharing the answers below. Please chime in if you have a method. I love learning how other people approach these types of things.
</p>
<dl>
<dt>
Daniel Peplow aka
<a href='http://twitter.com/danielpeplow'>@danielpeplow</a>
</dt>
<dd>
How many times before variableizing?
<b>1</b>
</dd>
<dd>
Naming approach?
<b>red1, red2, darkred1, darkred2, primarybrand, secondarybrand depending on what is required</b>
</dd>
<dt>
Chris Brauckmuller aka
<a href='http://twitter.com/cbrauckmuller'>@cbrauckmuller</a>
</dt>
<dd>
How many times before variableizing?
<b>1</b>
</dd>
<dd>
Naming approach?
<b>
It depends. For neutrals I usually have $gray, $gray-light and $gray-dark. For the main brand colors, I would name the original color something like $brand-green. Then if I needed variants of that, I might do $brand-green-lighterX, where X just represents how many percent lighter it is versus the original.
</b>
</dd>
<dd>
Sample?
<a href='https://github.com/cbrauckmuller/helium/blob/master/scss/config.scss'>https://github.com/cbrauckmuller/helium/blob/master/scss/config.scss</a>
</dd>
<dt>
Elyse Holladay aka
<a href='http://twitter.com/elyseholladay'>@elyseholladay</a>
</dt>
<dd>
How many times before variableizing?
<b>3</b>
</dd>
<dd>
Naming approach?
<b>
In a small/personal project, sometimes I'll just say 'blue' 'darkblue', etc.
In the large apps I work on, especially ones that require theming, I try to cut down on # of available colors by using darken/lighten in SASS rather than 2 different shades of blue. I name "global" colors like black/white by their names. For themable colors, I go primary/secondary/tertiary/highlight/error/success, and so on.
</b>
</dd>
<dd>
Sample?
<a href='https://gist.github.com/4550373'>https://gist.github.com/4550373</a>
</dd>
<dt>
Chase Woodford aka
<a href='http://twitter.com/chase1263070'>@chase1263070</a>
</dt>
<dd>
How many times before variableizing?
<b>2</b>
</dd>
<dd>
Naming approach?
<b>
I try to stick to a ${groupName}-{differentiator} naming convention.
</b>
</dd>
<dd>
Sample?
<a href='https://github.com/chasewoodford/chasewoodford.com/blob/master/css/sass/_variables.scss'>https://github.com/chasewoodford/chasewoodford.com/blob/master/css/sass/_variables.scss</a>
</dd>
</dl>

</article>
</div>
</section>
<section class='row'>
<div class='cell cell--s'>
<div id="disqus_thread" class="well">
<script type="text/javascript">
var disqus_shortname = 'dandenney';
(function() {
var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
</div>
</div>
</section>

<footer>
<p class='dib'>
Dan Denney
</p>
<nav class='dib'>
<a class="mls" href="/posts">Posts</a>
<a class="mls" href="/blips">Blips</a>
<a class="mls" href="/tinkerings">Tinkerings</a>
<a class="mls" href="/">Home</a>
</nav>
</footer>

<!-- = javascript_include_tag  'vendor' -->
<script src="../../assets/javascripts/vendor/prism.js"></script>
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-3589831-2', 'auto');
ga('send', 'pageview');
</script>

</body>
</html>
